@model GreenCartFarmers.WebApp.Product

@{
    ViewBag.Title = "Create Product";
}

<!-- Bootstrap 5 CSS (in case it isn't in your _Layout.cshtml) -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    .form-container {
        max-width: 800px;
        margin: 50px auto;
        padding: 30px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
        border-radius: 12px;
        transition: transform 0.3s ease;
    }

        .form-container:hover {
            transform: translateY(-5px);
        }

    h2 {
        text-align: center;
        color: #0d6efd;
        font-weight: bold;
        margin-bottom: 30px;
    }

    .btn-primary {
        width: 150px;
    }

    label {
        font-weight: 500;
    }

    .back-link {
        display: block;
        margin-top: 25px;
        text-align: center;
    }
</style>

<h2>Create Product</h2>

<div class="form-container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

        <div class="mb-3">
            @Html.LabelFor(model => model.ProductName, new { @class = "form-label" })
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Description, new { @class = "form-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Price, new { @class = "form-label" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.StockQuantity, new { @class = "form-label" })
            @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.CreatedAt, new { @class = "form-label" })
            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
            @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.UpdatedAt, new { @class = "form-label" })
            @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
            @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.CreatedBy, new { @class = "form-label" })
            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
        </div>

        <div class="text-center">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    }
</div>

<div class="back-link">
    @Html.ActionLink("← Back to List", "Index", null, new { @class = "btn btn-link" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
