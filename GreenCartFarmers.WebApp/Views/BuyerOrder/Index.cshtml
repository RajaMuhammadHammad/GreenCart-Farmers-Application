@model IEnumerable<GreenCartFarmers.WebApp.Order>
@{
    ViewBag.Title = "My Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid px-4 py-5">
    <div class="row">
        <div class="col-12">
            <!-- Header Section -->
            <div class="page-header d-flex flex-column flex-lg-row align-items-start align-items-lg-center justify-content-between mb-5 gap-3">
                <div class="d-flex align-items-center">
                    <div class="header-icon bg-gradient-primary rounded-circle p-3 me-3 shadow-lg position-relative">
                        <i class="fas fa-list-alt text-white fs-4"></i>
                        @if (Model != null && Model.Any())
                        {
                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger pulse">
                                @Model.Count()
                                <span class="visually-hidden">total orders</span>
                            </span>
                        }
                    </div>
                    <div>
                        <h1 class="display-5 fw-bold text-dark mb-1 gradient-text">My Orders</h1>
                        <p class="text-muted mb-0 lead">Track and manage your order history</p>
                    </div>
                </div>
                <div class="header-actions d-flex gap-3 flex-wrap">
                    @Html.ActionLink("Place New Order", "Create", null,
                        new { @class = "btn btn-success btn-lg btn-modern shadow-lg" })
                    <button class="btn btn-outline-primary btn-lg btn-modern shadow-sm" id="filterToggle">
                        <i class="fas fa-filter me-2"></i>Filter Orders
                    </button>
                    <button class="btn btn-outline-secondary btn-lg btn-modern shadow-sm" onclick="printOrders()">
                        <i class="fas fa-print me-2"></i>Print
                    </button>
                </div>
            </div>

            <!-- Filter Section -->
            <div class="filter-card card border-0 shadow-lg mb-4" id="filterSection" style="display: none;">
                <div class="card-body p-4">
                    <h5 class="card-title mb-3 text-primary">
                        <i class="fas fa-sliders-h me-2"></i>Filter Options
                    </h5>
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label fw-semibold text-dark">
                                <i class="fas fa-info-circle me-1"></i>Status
                            </label>
                            <select class="form-select form-control-modern" id="statusFilter">
                                <option value="">All Statuses</option>
                                <option value="pending">Pending</option>
                                <option value="confirmed">Confirmed</option>
                                <option value="processing">Processing</option>
                                <option value="shipped">Shipped</option>
                                <option value="delivered">Delivered</option>
                                <option value="cancelled">Cancelled</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold text-dark">
                                <i class="fas fa-calendar me-1"></i>Date Range
                            </label>
                            <select class="form-select form-control-modern" id="dateFilter">
                                <option value="">All Time</option>
                                <option value="7">Last 7 Days</option>
                                <option value="30">Last 30 Days</option>
                                <option value="90">Last 3 Months</option>
                                <option value="365">Last Year</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-semibold text-dark">
                                <i class="fas fa-search me-1"></i>Search Orders
                            </label>
                            <input type="text" class="form-control form-control-modern" id="searchFilter" placeholder="Search by Order ID...">
                        </div>
                        <div class="col-md-2 d-flex align-items-end">
                            <button class="btn btn-outline-danger btn-modern w-100" id="clearFilters">
                                <i class="fas fa-times me-1"></i>Clear All
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Summary Cards -->
            @if (Model != null && Model.Any())
            {
                <div class="row g-4 mb-5">
                    <div class="col-md-3 col-sm-6">
                        <div class="stats-card card border-0 bg-primary text-white h-100 overflow-hidden">
                            <div class="card-body text-center position-relative">
                                <div class="stats-icon">
                                    <i class="fas fa-shopping-bag fs-1 mb-3 opacity-75"></i>
                                </div>
                                <h2 class="mb-2 fw-bold counter" data-target="@Model.Count()">0</h2>
                                <p class="mb-0 text-uppercase fw-semibold tracking-wide">Total Orders</p>
                                <div class="stats-bg-icon">
                                    <i class="fas fa-shopping-bag"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <div class="stats-card card border-0 bg-success text-white h-100 overflow-hidden">
                            <div class="card-body text-center position-relative">
                                <div class="stats-icon">
                                    <i class="fas fa-check-circle fs-1 mb-3 opacity-75"></i>
                                </div>
                                <h2 class="mb-2 fw-bold counter" data-target="@Model.Count(o => o.Status?.ToLower() == "delivered" || o.Status?.ToLower() == "completed")">0</h2>
                                <p class="mb-0 text-uppercase fw-semibold tracking-wide">Completed</p>
                                <div class="stats-bg-icon">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <div class="stats-card card border-0 bg-warning text-white h-100 overflow-hidden">
                            <div class="card-body text-center position-relative">
                                <div class="stats-icon">
                                    <i class="fas fa-clock fs-1 mb-3 opacity-75"></i>
                                </div>
                                <h2 class="mb-2 fw-bold counter" data-target="@Model.Count(o => o.Status?.ToLower() == "pending" || o.Status?.ToLower() == "processing")">0</h2>
                                <p class="mb-0 text-uppercase fw-semibold tracking-wide">In Progress</p>
                                <div class="stats-bg-icon">
                                    <i class="fas fa-clock"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <div class="stats-card card border-0 bg-info text-white h-100 overflow-hidden">
                            <div class="card-body text-center position-relative">
                                <div class="stats-icon">
                                    <i class="fas fa-truck fs-1 mb-3 opacity-75"></i>
                                </div>
                                <h2 class="mb-2 fw-bold counter" data-target="@Model.Count(o => o.Status?.ToLower() == "shipped" || o.Status?.ToLower() == "out for delivery")">0</h2>
                                <p class="mb-0 text-uppercase fw-semibold tracking-wide">In Transit</p>
                                <div class="stats-bg-icon">
                                    <i class="fas fa-truck"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Orders Table -->
                <div class="table-container card border-0 shadow-lg" id="ordersContainer">
                    <div class="card-header bg-gradient-primary text-white py-4">
                        <div class="d-flex align-items-center justify-content-between">
                            <h4 class="mb-0 fw-semibold">
                                <i class="fas fa-table me-2"></i>Orders Overview
                            </h4>
                            <div class="table-actions">
                                <button class="btn btn-outline-light btn-sm btn-modern me-2" onclick="exportOrders()">
                                    <i class="fas fa-download me-1"></i>Export
                                </button>
                                <button class="btn btn-light btn-sm btn-modern" onclick="location.reload()">
                                    <i class="fas fa-sync me-1"></i>Refresh
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover table-modern mb-0" id="ordersTable">
                                <thead class="table-header">
                                    <tr>
                                        <th scope="col" class="sortable" data-sort="id">
                                            <i class="fas fa-hashtag me-2"></i>Order ID
                                            <i class="fas fa-sort sort-icon"></i>
                                        </th>
                                        <th scope="col" class="sortable" data-sort="date">
                                            <i class="fas fa-calendar me-2"></i>Order Date
                                            <i class="fas fa-sort sort-icon"></i>
                                        </th>
                                        <th scope="col">
                                            <i class="fas fa-info-circle me-2"></i>Status
                                        </th>
                                        <th scope="col" class="text-center">
                                            <i class="fas fa-cog me-2"></i>Actions
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="ordersTableBody">
                                    @foreach (var order in Model)
                                    {
                                        <tr class="order-row animate-row"
                                            data-order-id="@order.OrderId"
                                            data-status="@order.Status?.ToLower()"
                                            data-date="@(order.OrderDate?.ToString("yyyy-MM-dd"))">
                                            <td class="align-middle">
                                                <div class="d-flex align-items-center">
                                                    <div class="order-icon-sm me-3">
                                                        <i class="fas fa-shopping-bag text-primary"></i>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0 fw-bold text-primary">#@order.OrderId</h6>
                                                        <small class="text-muted">Order Number</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <div>
                                                    <h6 class="mb-1 fw-semibold text-dark">
                                                        @(order.OrderDate.HasValue ? order.OrderDate.Value.ToString("MMM dd, yyyy") : "N/A")
                                                    </h6>
                                                    <small class="text-muted">
                                                        @(order.OrderDate.HasValue ? order.OrderDate.Value.ToString("dddd, h:mm tt") : "")
                                                    </small>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                @{
                                                    string statusClass = "secondary";
                                                    string statusIcon = "clock";

                                                    switch (order.Status?.ToLower())
                                                    {
                                                        case "pending":
                                                            statusClass = "warning";
                                                            statusIcon = "clock";
                                                            break;
                                                        case "confirmed":
                                                        case "processing":
                                                            statusClass = "info";
                                                            statusIcon = "cog fa-spin";
                                                            break;
                                                        case "shipped":
                                                        case "out for delivery":
                                                            statusClass = "primary";
                                                            statusIcon = "truck";
                                                            break;
                                                        case "delivered":
                                                        case "completed":
                                                            statusClass = "success";
                                                            statusIcon = "check-circle";
                                                            break;
                                                        case "cancelled":
                                                        case "rejected":
                                                            statusClass = "danger";
                                                            statusIcon = "times-circle";
                                                            break;
                                                    }
                                                }
                                                <span class="badge badge-modern bg-@statusClass fs-6 px-3 py-2">
                                                    <i class="fas fa-@statusIcon me-2"></i>
                                                    @order.Status
                                                </span>
                                            </td>
                                            <td class="align-middle text-center">
                                                <div class="btn-group action-buttons" role="group">
                                                    @Html.ActionLink("View", "Details", new { id = order.OrderId },
                                                        new { @class = "btn btn-primary btn-sm btn-action" })
                                                    @if (order.Status?.ToLower() == "pending")
                                                    {
                                                        @Html.ActionLink("Edit", "Edit", new { id = order.OrderId },
                                                            new { @class = "btn btn-outline-secondary btn-sm btn-action" })
                                                    }
                                                    @if (order.Status?.ToLower() == "delivered")
                                                    {
                                                        <button class="btn btn-outline-success btn-sm btn-action"
                                                                onclick="showReorderModal(@order.OrderId)">
                                                            <i class="fas fa-redo me-1"></i>Reorder
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- No Results Message -->
                <div class="text-center py-5 d-none" id="noResultsMessage">
                    <div class="empty-state-icon mb-4">
                        <i class="fas fa-search text-muted"></i>
                    </div>
                    <h4 class="text-muted mb-3">No Orders Found</h4>
                    <p class="text-muted">Try adjusting your filters to see more results.</p>
                    <button class="btn btn-primary btn-modern" onclick="clearAllFilters()">
                        Clear Filters
                    </button>
                </div>
            }
            else
            {
                <!-- Empty State -->
                <div class="empty-state text-center py-5">
                    <div class="empty-state-animation mb-4">
                        <i class="fas fa-shopping-cart text-muted animated-icon"></i>
                    </div>
                    <h3 class="text-muted mb-3">No Orders Yet</h3>
                    <p class="text-muted mb-4 lead">You haven't placed any orders yet. Start shopping to see your orders here!</p>
                    @Html.ActionLink("Place Your First Order", "Create", null,
                        new { @class = "btn btn-success btn-lg btn-modern pulse-button" })
                </div>
            }
        </div>
    </div>
</div>

<!-- Reorder Modal -->
<div class="modal fade" id="reorderModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-modern">
            <div class="modal-header border-0 pb-0">
                <h5 class="modal-title fw-bold">
                    <i class="fas fa-redo text-success me-2"></i>Reorder Items
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center py-4">
                <div class="modal-icon mb-3">
                    <i class="fas fa-shopping-cart text-success"></i>
                </div>
                <h6 class="mb-3 fw-semibold">Add items from this order to your cart?</h6>
                <p class="text-muted">All available items will be added to your cart for checkout.</p>
            </div>
            <div class="modal-footer border-0 pt-0">
                <button type="button" class="btn btn-outline-secondary btn-modern" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success btn-modern" onclick="confirmReorder()">
                    <i class="fas fa-shopping-cart me-2"></i>Add to Cart
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    /* Modern Color Palette */
    :root {
        --primary-color: #4f46e5;
        --primary-dark: #3730a3;
        --success-color: #10b981;
        --warning-color: #f59e0b;
        --danger-color: #ef4444;
        --info-color: #06b6d4;
        --secondary-color: #6b7280;
        --light-bg: #f8fafc;
        --card-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        --hover-shadow: 0 20px 40px -10px rgba(0, 0, 0, 0.15);
        --border-radius: 16px;
        --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* Page Header Styling */
    .page-header {
        padding: 2rem 0;
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.03) 0%, rgba(16, 185, 129, 0.03) 100%);
        border-radius: var(--border-radius);
        margin: -1rem -1rem 2rem -1rem;
        padding: 3rem 2rem 2rem 2rem;
    }

    .header-icon {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark)) !important;
        transition: var(--transition);
        animation: float 3s ease-in-out infinite;
    }

    .header-icon:hover {
        transform: scale(1.1) rotate(5deg);
    }

    .gradient-text {
        background: linear-gradient(135deg, var(--primary-color), var(--success-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* Modern Button Styling */
    .btn-modern {
        border-radius: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        border: 2px solid transparent;
    }

    .btn-modern::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s ease;
    }

    .btn-modern:hover::before {
        left: 100%;
    }

    .btn-modern:hover {
        transform: translateY(-2px);
        box-shadow: var(--hover-shadow);
    }

    .btn-success.btn-modern {
        background: linear-gradient(135deg, var(--success-color), #059669);
        border-color: var(--success-color);
    }

    .btn-primary.btn-modern {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
        border-color: var(--primary-color);
    }

    .btn-outline-primary.btn-modern {
        border-color: var(--primary-color);
        color: var(--primary-color);
    }

    .btn-outline-primary.btn-modern:hover {
        background: var(--primary-color);
        border-color: var(--primary-color);
        color: white;
    }

    /* Filter Card Styling */
    .filter-card {
        border-radius: var(--border-radius);
        border: 2px solid transparent;
        background: linear-gradient(white, white) padding-box,
                    linear-gradient(135deg, var(--primary-color), var(--success-color)) border-box;
        animation: slideDown 0.5s ease-out;
    }

    .form-control-modern {
        border-radius: 10px;
        border: 2px solid #e5e7eb;
        transition: var(--transition);
        padding: 0.75rem 1rem;
    }

    .form-control-modern:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    }

    /* Stats Cards */
    .stats-card {
        border-radius: var(--border-radius);
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        cursor: pointer;
    }

    .stats-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.7s ease;
    }

    .stats-card:hover::before {
        left: 100%;
    }

    .stats-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: var(--hover-shadow);
    }

    .stats-bg-icon {
        position: absolute;
        right: -20px;
        top: -20px;
        font-size: 6rem;
        opacity: 0.1;
        transform: rotate(15deg);
    }

    .counter {
        font-size: 2.5rem;
        font-weight: 800;
    }

    .tracking-wide {
        letter-spacing: 1px;
    }

    /* Table Styling */
    .table-container {
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--card-shadow);
    }

    .bg-gradient-primary {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-dark)) !important;
    }

    .table-modern {
        font-size: 0.95rem;
    }

    .table-header th {
        background: linear-gradient(135deg, #f8fafc, #f1f5f9);
        border: none;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.85rem;
        color: var(--secondary-color);
        padding: 1.25rem 1rem;
        position: relative;
    }

    .sortable {
        cursor: pointer;
        user-select: none;
        transition: var(--transition);
    }

    .sortable:hover {
        background: linear-gradient(135deg, #f1f5f9, #e2e8f0);
        color: var(--primary-color);
    }

    .sort-icon {
        opacity: 0.5;
        margin-left: 0.5rem;
        transition: var(--transition);
    }

    .sortable:hover .sort-icon {
        opacity: 1;
        color: var(--primary-color);
    }

    .sortable.active .sort-icon {
        color: var(--primary-color);
        opacity: 1;
    }

    .order-row {
        transition: var(--transition);
        border-bottom: 1px solid #f1f5f9 !important;
    }

    .order-row:hover {
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.02), rgba(16, 185, 129, 0.02));
        transform: translateX(4px);
        box-shadow: 4px 0 0 var(--primary-color), 0 4px 20px rgba(0,0,0,0.08);
    }

    .order-icon-sm {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.1), rgba(79, 70, 229, 0.2));
        border-radius: 50%;
        font-size: 1.1rem;
        transition: var(--transition);
    }

    .order-row:hover .order-icon-sm {
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.2), rgba(79, 70, 229, 0.3));
        transform: scale(1.1);
    }

    /* Badge Styling */
    .badge-modern {
        font-weight: 600;
        border-radius: 20px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border: 2px solid transparent;
        transition: var(--transition);
    }

    .badge-modern:hover {
        transform: scale(1.05);
        border-color: rgba(255,255,255,0.3);
    }

    /* Action Buttons */
    .btn-action {
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.8rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: var(--transition);
        margin: 0 2px;
        position: relative;
        overflow: hidden;
    }

    .btn-action::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        transition: left 0.3s ease;
    }

    .btn-action:hover::before {
        left: 100%;
    }

    .btn-action:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .action-buttons {
        opacity: 0.7;
        transition: var(--transition);
    }

    .order-row:hover .action-buttons {
        opacity: 1;
    }

    /* Modal Styling */
    .modal-modern .modal-content {
        border-radius: var(--border-radius);
        border: none;
        box-shadow: var(--hover-shadow);
    }

    .modal-icon i {
        font-size: 3rem;
        animation: bounce 2s infinite;
    }

    /* Empty State */
    .empty-state {
        padding: 4rem 0;
    }

    .empty-state-icon i {
        font-size: 5rem;
        opacity: 0.2;
    }

    .empty-state-animation i {
        font-size: 6rem;
        opacity: 0.2;
        animation: float 3s ease-in-out infinite;
    }

    .animated-icon {
        animation: float 3s ease-in-out infinite;
    }

    .pulse-button {
        animation: pulse-glow 2s infinite;
    }

    .pulse {
        animation: pulse 2s infinite;
    }

    /* Animations */
    @@keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }

    @@keyframes bounce {
        0%, 20%, 53%, 80%, 100% {
            animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
            transform: translate3d(0,0,0);
        }
        40%, 43% {
            animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
            transform: translate3d(0, -8px, 0);
        }
        70% {
            animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
            transform: translate3d(0, -4px, 0);
        }
        90% {
            transform: translate3d(0,-1px,0);
        }
    }

    @@keyframes pulse-glow {
        0%, 100% {
            box-shadow: 0 0 20px rgba(16, 185, 129, 0.3);
            transform: scale(1);
        }
        50% {
            box-shadow: 0 0 30px rgba(16, 185, 129, 0.5);
            transform: scale(1.05);
        }
    }

    @@keyframes pulse {
        0%, 100% {
            opacity: 1;
        }
        50% {
            opacity: 0.7;
        }
    }

    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Counter Animation for Stats Cards
            $('.counter').each(function () {
                const $this = $(this);
                const countTo = $this.attr('data-target');
                $({ countNum: $this.text() }).animate({
                    countNum: countTo
                }, {
                    duration: 2000,
                    easing: 'swing',
                    step: function () {
                        $this.text(Math.floor(this.countNum));
                    },
                    complete: function () {
                        $this.text(this.countNum);
                    }
                });
            });

            // Toggle Filter Section
            $('#filterToggle').click(function () {
                $('#filterSection').slideToggle(300);
            });

            // Filter Orders
            function filterOrders() {
                const status = $('#statusFilter').val().toLowerCase();
                const dateRange = $('#dateFilter').val();
                const search = $('#searchFilter').val().toLowerCase();

                let filteredOrders = $('#ordersTableBody tr');

                // Filter by Status
                if (status) {
                    filteredOrders = filteredOrders.filter(function () {
                        return $(this).data('status') === status;
                    });
                }

                // Filter by Date Range
                if (dateRange) {
                    const today = new Date();
                    let startDate = new Date();
                    switch (dateRange) {
                        case '7':
                            startDate.setDate(today.getDate() - 7);
                            break;
                        case '30':
                            startDate.setDate(today.getDate() - 30);
                            break;
                        case '90':
                            startDate.setDate(today.getDate() - 90);
                            break;
                        case '365':
                            startDate.setDate(today.getDate() - 365);
                            break;
                    }
                    filteredOrders = filteredOrders.filter(function () {
                        const orderDate = new Date($(this).data('date'));
                        return orderDate >= startDate && orderDate <= today;
                    });
                }

                // Filter by Search
                if (search) {
                    filteredOrders = filteredOrders.filter(function () {
                        const orderId = $(this).data('order-id').toString();
                        return orderId.includes(search);
                    });
                }

                // Show/Hide Orders
                $('#ordersTableBody tr').hide();
                filteredOrders.show();

                // Show No Results Message if No Orders Match
                if (filteredOrders.length === 0) {
                    $('#ordersContainer').hide();
                    $('#noResultsMessage').removeClass('d-none');
                } else {
                    $('#ordersContainer').show();
                    $('#noResultsMessage').addClass('d-none');
                }
            }

            // Apply Filters on Change
            $('#statusFilter, #dateFilter, #searchFilter').on('change keyup', filterOrders);

            // Clear Filters
            $('#clearFilters').click(function () {
                $('#statusFilter').val('');
                $('#dateFilter').val('');
                $('#searchFilter').val('');
                $('#ordersTableBody tr').show();
                $('#ordersContainer').show();
                $('#noResultsMessage').addClass('d-none');
            });

            // Clear All Filters (from No Results Message)
            window.clearAllFilters = function () {
                $('#clearFilters').click();
            };

            // Table Sorting
            $('.sortable').click(function () {
                const sortKey = $(this).data('sort');
                const isAsc = !$(this).hasClass('asc');
                $('.sortable').removeClass('asc desc');
                $(this).addClass(isAsc ? 'asc' : 'desc');

                const rows = $('#ordersTableBody tr').get();
                rows.sort(function (a, b) {
                    let aValue = $(a).data(sortKey);
                    let bValue = $(b).data(sortKey);

                    if (sortKey === 'date') {
                        aValue = new Date(aValue);
                        bValue = new Date(bValue);
                    } else if (sortKey === 'id') {
                        aValue = parseInt(aValue);
                        bValue = parseInt(bValue);
                    }

                    if (isAsc) {
                        return aValue > bValue ? 1 : -1;
                    } else {
                        return aValue < bValue ? 1 : -1;
                    }
                });

                $('#ordersTableBody').empty().append(rows);
            });

            // Print Orders
            window.printOrders = function () {
                const printContents = $('#ordersContainer').clone().addClass('print-area').prop('outerHTML');
                const originalContents = $('body').html();
                $('body').html(printContents);
                window.print();
                $('body').html(originalContents);
            };

            // Export Orders to CSV
            window.exportOrders = function () {
                let csv = 'Order ID,Order Date,Status\n';
                $('#ordersTableBody tr:visible').each(function () {
                    const orderId = $(this).data('order-id');
                    const date = $(this).find('td:eq(1) h6').text();
                    const status = $(this).find('td:eq(2) span').text().trim();
                    csv += `"${orderId}","${date}","${status}"\n`;
                });

                const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
                const link = document.createElement('a');
                const url = URL.createObjectURL(blob);
                link.setAttribute('href', url);
                link.setAttribute('download', 'orders.csv');
                link.style.visibility = 'hidden';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            };

            // Show Reorder Modal
            window.showReorderModal = function (orderId) {
                $('#reorderModal').data('order-id', orderId).modal('show');
            };

            // Confirm Reorder
            window.confirmReorder = function () {
                const orderId = $('#reorderModal').data('order-id');
                $.ajax({
                    url: '/Orders/Reorder',
                    type: 'POST',
                    data: { orderId: orderId },
                    success: function (response) {
                        if (response.success) {
                            alert('Items added to cart successfully!');
                            $('#reorderModal').modal('hide');
                        } else {
                            alert('Error reordering items: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while reordering.');
                    }
                });
            };
        });
    </script>
}