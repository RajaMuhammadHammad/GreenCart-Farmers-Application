@model List<GreenCartFarmers.WebApp.Product>
@{
    ViewBag.Title = "Place New Order";
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
    }

    .green-cart-container {
        max-width: 1200px;
        margin: 20px auto;
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(10px);
        overflow: hidden;
    }

    .green-cart-header {
        background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
        color: white;
        padding: 40px 30px;
        text-align: center;
        position: relative;
    }

    .green-cart-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="20" cy="20" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="40" r="0.8" fill="rgba(255,255,255,0.08)"/><circle cx="40" cy="80" r="1.2" fill="rgba(255,255,255,0.06)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .green-cart-header h1 {
        font-size: 2.5rem;
        margin-bottom: 10px;
        position: relative;
        z-index: 1;
    }

    .green-cart-header p {
        font-size: 1.1rem;
        opacity: 0.9;
        position: relative;
        z-index: 1;
    }

    .green-cart-content {
        padding: 40px 30px;
    }

    .green-cart-title {
        color: #2c3e50;
        margin-bottom: 30px;
        font-size: 2rem;
        text-align: center;
        position: relative;
    }

    .green-cart-title::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 3px;
        background: linear-gradient(90deg, #4CAF50, #45a049);
        border-radius: 2px;
    }

    .form-group {
        margin-bottom: 25px;
        text-align: center;
    }

    .form-group label {
        display: block;
        margin-bottom: 8px;
        color: #2c3e50;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .form-control {
        width: 300px;
        padding: 12px 16px;
        border: 2px solid #e1e8ed;
        border-radius: 10px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
        margin: 0 auto;
        display: block;
    }

    .form-control:focus {
        outline: none;
        border-color: #4CAF50;
        box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        transform: translateY(-2px);
    }

    .table-container {
        margin: 30px 0;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        background: white;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        font-size: 1rem;
    }

    .table thead {
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        color: white;
    }

    .table thead th {
        padding: 20px 15px;
        text-align: left;
        font-weight: 600;
        font-size: 1.1rem;
        letter-spacing: 0.5px;
        position: relative;
    }

    .table thead th::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, #4CAF50, #45a049);
    }

    .table tbody tr {
        transition: all 0.3s ease;
        border-bottom: 1px solid #f0f2f5;
    }

    .table tbody tr:hover {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        transform: scale(1.01);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .table tbody td {
        padding: 18px 15px;
        vertical-align: middle;
        color: #2c3e50;
    }

    .checkbox-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .custom-checkbox {
        width: 20px;
        height: 20px;
        appearance: none;
        border: 2px solid #4CAF50;
        border-radius: 4px;
        cursor: pointer;
        position: relative;
        transition: all 0.3s ease;
    }

    .custom-checkbox:checked {
        background: #4CAF50;
        transform: scale(1.1);
    }

    .custom-checkbox:checked::after {
        content: '✓';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: white;
        font-weight: bold;
        font-size: 12px;
    }

    .product-name {
        font-weight: 600;
        color: #2c3e50;
        font-size: 1.1rem;
    }

    .price {
        color: #27ae60;
        font-weight: 700;
        font-size: 1.1rem;
    }

    .quantity-input {
        width: 80px;
        padding: 8px 12px;
        border: 2px solid #e1e8ed;
        border-radius: 8px;
        text-align: center;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .quantity-input:focus {
        outline: none;
        border-color: #4CAF50;
        box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);
    }

    .btn-submit {
        background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
        color: white;
        border: none;
        padding: 15px 40px;
        font-size: 1.2rem;
        font-weight: 600;
        border-radius: 50px;
        cursor: pointer;
        transition: all 0.3s ease;
        display: block;
        margin: 30px auto;
        box-shadow: 0 8px 25px rgba(76, 175, 80, 0.3);
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .btn-submit:hover {
        transform: translateY(-3px);
        box-shadow: 0 12px 35px rgba(76, 175, 80, 0.4);
        background: linear-gradient(135deg, #45a049 0%, #4CAF50 100%);
    }

    .btn-submit:active {
        transform: translateY(-1px);
    }

    .alert {
        padding: 15px 20px;
        margin: 20px 0;
        border-radius: 10px;
        font-weight: 500;
        text-align: center;
        animation: slideIn 0.5s ease-out;
    }

    .alert-danger {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        color: white;
        border-left: 5px solid #e74c3c;
    }

    .alert-success {
        background: linear-gradient(135deg, #4CAF50 0%, #45a049 100%);
        color: white;
        border-left: 5px solid #27ae60;
    }

    .no-products {
        text-align: center;
        color: #7f8c8d;
        font-style: italic;
        padding: 40px;
        font-size: 1.1rem;
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .green-cart-container {
            margin: 10px;
            border-radius: 15px;
        }

        .green-cart-header {
            padding: 30px 20px;
        }

        .green-cart-header h1 {
            font-size: 2rem;
        }

        .green-cart-content {
            padding: 30px 20px;
        }

        .form-control {
            width: 100%;
            max-width: 300px;
        }

        .table-container {
            overflow-x: auto;
        }

        .table {
            min-width: 600px;
        }

        .table thead th,
        .table tbody td {
            padding: 12px 8px;
            font-size: 0.9rem;
        }
    }
</style>

<div class="green-cart-container">
    <div class="green-cart-header">
        <h1>Welcome to Green Cart</h1>
        <p>Connecting farmers with consumers for fresh, sustainable produce</p>
    </div>

    <div class="green-cart-content">
        <h2 class="green-cart-title">Place New Order</h2>

        @using (Html.BeginForm("Create", "BuyerOrder", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="username">Enter your username:</label>
                <input type="text" name="username" class="form-control" required placeholder="Enter your username" />
            </div>

            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Select</th>
                            <th>Product</th>
                            <th>Price</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            for (int i = 0; i < Model.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <div class="checkbox-container">
                                            <input type="checkbox" name="productIds" value="@Model[i].ProductId" class="custom-checkbox" />
                                        </div>
                                    </td>
                                    <td><span class="product-name">@Model[i].ProductName</span></td>
                                    <td><span class="price">@Model[i].Price.ToString("C")</span></td>
                                    <td>
                                        <input type="number" name="quantities" value="1" min="1" class="quantity-input" />
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr><td colspan="4" class="no-products">No products available for ordering.</td></tr>
                        }
                    </tbody>
                </table>
            </div>

            <button type="submit" class="btn-submit">Place Order</button>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger">@TempData["Error"]</div>
        }

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success">@TempData["Success"]</div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const checkboxes = document.querySelectorAll('.custom-checkbox');
        const quantityInputs = document.querySelectorAll('.quantity-input');

        // Auto-check checkbox when quantity is changed
        quantityInputs.forEach((input, index) => {
            input.addEventListener('change', function () {
                if (this.value > 0 && checkboxes[index]) {
                    checkboxes[index].checked = true;
                }
            });
        });

        // Add ripple effect to button
        const submitBtn = document.querySelector('.btn-submit');
        if (submitBtn) {
            submitBtn.addEventListener('click', function (e) {
                const ripple = document.createElement('span');
                const rect = this.getBoundingClientRect();
                const size = Math.max(rect.width, rect.height);
                const x = e.clientX - rect.left - size / 2;
                const y = e.clientY - rect.top - size / 2;

                ripple.style.width = ripple.style.height = size + 'px';
                ripple.style.left = x + 'px';
                ripple.style.top = y + 'px';
                ripple.classList.add('ripple');

                this.appendChild(ripple);

                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        }

        // Form validation
        const form = document.querySelector('form');
        if (form) {
            form.addEventListener('submit', function (e) {
                const checkedBoxes = document.querySelectorAll('.custom-checkbox:checked');
                if (checkedBoxes.length === 0) {
                    e.preventDefault();
                    alert('Please select at least one product to order.');
                    return false;
                }
            });
        }
    });
</script>

<style>
    .ripple {
        position: absolute;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.3);
        transform: scale(0);
        animation: ripple-animation 0.6s linear;
        pointer-events: none;
    }

    @@keyframes ripple-animation {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }

    /* Additional utility classes */
    .fade-in {
        animation: fadeIn 0.5s ease-in;
    }

    @@keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    /* Enhanced focus states for accessibility */
    .custom-checkbox:focus,
    .quantity-input:focus,
    .form-control:focus {
        outline: 2px solid #4CAF50;
        outline-offset: 2px;
    }

    /* Loading state for form submission */
    .btn-submit.loading {
        opacity: 0.7;
        cursor: not-allowed;
        pointer-events: none;
    }

    .btn-submit.loading::after {
        content: '';
        position: absolute;
        width: 16px;
        height: 16px;
        margin: auto;
        border: 2px solid transparent;
        border-top-color: #ffffff;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>