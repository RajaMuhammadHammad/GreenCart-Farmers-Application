@model GreenCartFarmers.WebApp.Delivery
@{
    ViewBag.Title = "Delivery Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 50%, #f0f9ff 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .page-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 40px 20px;
    }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #0f172a;
        margin-bottom: 10px;
        background: linear-gradient(135deg, #0ea5e9, #3b82f6);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .page-subtitle {
        color: #64748b;
        font-size: 1.1rem;
        font-weight: 400;
    }

    .delivery-card {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border-radius: 24px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.5);
        overflow: hidden;
        position: relative;
    }

    .delivery-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6px;
        background: linear-gradient(90deg, #0ea5e9, #3b82f6, #8b5cf6);
    }

    .card-header {
        background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        padding: 30px;
        border-bottom: 2px solid #e2e8f0;
        position: relative;
    }

    .card-header h3 {
        color: #1e293b;
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .card-header::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 30px;
        width: 60px;
        height: 4px;
        background: linear-gradient(90deg, #0ea5e9, #3b82f6);
        border-radius: 2px;
    }

    .card-body {
        padding: 40px;
    }

    .details-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 30px;
    }

    .detail-item {
        background: #f8fafc;
        padding: 25px;
        border-radius: 16px;
        border: 2px solid #e2e8f0;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .detail-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        border-color: #0ea5e9;
    }

    .detail-item::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 4px;
        height: 100%;
        background: linear-gradient(135deg, #0ea5e9, #3b82f6);
        transition: width 0.3s ease;
    }

    .detail-item:hover::before {
        width: 6px;
    }

    .detail-label {
        font-weight: 700;
        color: #475569;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .detail-value {
        font-size: 1.2rem;
        font-weight: 600;
        color: #1e293b;
        margin: 0;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        padding: 8px 16px;
        border-radius: 25px;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-pending {
        background: #fef3c7;
        color: #92400e;
        border: 2px solid #f59e0b;
    }

    .status-delivered {
        background: #d1fae5;
        color: #065f46;
        border: 2px solid #10b981;
    }

    .status-processing {
        background: #dbeafe;
        color: #1e40af;
        border: 2px solid #3b82f6;
    }

    .card-footer {
        background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        padding: 30px;
        border-top: 2px solid #e2e8f0;
        text-align: center;
    }

    .btn-back {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        padding: 14px 28px;
        background: linear-gradient(135deg, #0ea5e9, #3b82f6);
        color: white;
        text-decoration: none;
        border-radius: 12px;
        font-weight: 600;
        font-size: 1rem;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .btn-back:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(14, 165, 233, 0.3);
        color: white;
        text-decoration: none;
    }

    .btn-back:active {
        transform: translateY(0);
    }

    @@media (max-width: 768px) {
        .page-container {
            padding: 20px 10px;
        }

        .page-title {
            font-size: 2rem;
        }

        .details-grid {
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .card-header,
        .card-body,
        .card-footer {
            padding: 20px;
        }
    }
</style>

<div class="page-container">
    <div class="page-header">
        <h1 class="page-title">📦 Delivery Details</h1>
        <p class="page-subtitle">Track your order delivery status and information</p>
    </div>

    <div class="delivery-card">
        <div class="card-header">
            <h3>🚚 Delivery Information</h3>
        </div>

        <div class="card-body">
            <div class="details-grid">
                <div class="detail-item">
                    <div class="detail-label">
                        📋 Order ID
                    </div>
                    <p class="detail-value">@Model.OrderId</p>
                </div>

                <div class="detail-item">
                    <div class="detail-label">
                        📅 Delivery Date
                    </div>
                    <p class="detail-value">
                        @if (Model.DeliveryDate.HasValue)
                        {
                            @Model.DeliveryDate.Value.ToString("dddd, dd MMM yyyy")
                        }
                        else
                        {
                            <span style="color: #f59e0b;">⏳ Not Scheduled</span>
                        }
                    </p>
                </div>

                <div class="detail-item">
                    <div class="detail-label">
                        🏷️ Order Status
                    </div>
                    <p class="detail-value">
                        @if (Model.Order?.Status != null)
                        {
                            var status = Model.Order.Status.ToLower();
                            var badgeClass = status == "delivered" ? "status-delivered" :
                                           status == "processing" ? "status-processing" : "status-pending";
                            var statusIcon = status == "delivered" ? "✅" :
                                           status == "processing" ? "⚙️" : "⏳";

                            <span class="status-badge @badgeClass">
                                @statusIcon @Model.Order.Status
                            </span>
                        }
                        else
                        {
                            <span class="status-badge status-pending">❓ Unknown</span>
                        }
                    </p>
                </div>
            </div>
        </div>

        <div class="card-footer">
            <a href="@Url.Action("Index")" class="btn-back">
                ← Back to Deliveries
            </a>
        </div>
    </div>
</div>