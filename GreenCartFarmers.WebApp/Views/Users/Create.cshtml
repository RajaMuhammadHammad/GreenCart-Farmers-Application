@model GreenCartFarmers.WebApp.User
@{
    ViewBag.Title = "Create User";
}

<style>
    .page-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
    }

    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        margin-bottom: 2rem;
        border-radius: 15px;
        text-align: center;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .page-header h2 {
        margin: 0;
        font-size: 2.2rem;
        font-weight: 300;
    }

    .form-container {
        background: white;
        padding: 2.5rem;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        margin-bottom: 2rem;
    }

    .form-title {
        color: #2c3e50;
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 2rem;
        text-align: center;
        position: relative;
    }

    .form-title:after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 50px;
        height: 3px;
        background: linear-gradient(90deg, #667eea, #764ba2);
        border-radius: 2px;
    }

    .form-group {
        margin-bottom: 1.5rem;
        position: relative;
    }

    .control-label {
        color: #495057;
        font-weight: 600;
        margin-bottom: 0.5rem;
        display: block;
        font-size: 0.95rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 2px solid #e9ecef;
        border-radius: 10px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background-color: #f8f9fa;
        box-sizing: border-box;
    }

    .form-control:focus {
        outline: none;
        border-color: #667eea;
        background-color: white;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-1px);
    }

    .form-control:hover {
        border-color: #ced4da;
        background-color: white;
    }

    .text-danger {
        color: #dc3545;
        font-size: 0.85rem;
        margin-top: 0.25rem;
        display: block;
    }

    .btn-submit {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
        padding: 14px 30px;
        border: none;
        border-radius: 25px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        width: 100%;
        margin-top: 1rem;
        text-transform: uppercase;
        letter-spacing: 1px;
        box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
    }

    .btn-submit:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(40, 167, 69, 0.4);
    }

    .btn-submit:active {
        transform: translateY(0);
    }

    .back-link {
        background: linear-gradient(45deg, #6c757d, #495057);
        color: white;
        padding: 10px 20px;
        border-radius: 20px;
        text-decoration: none;
        display: inline-block;
        margin-top: 1rem;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .back-link:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);
        color: white;
        text-decoration: none;
    }

    .validation-summary {
        background: #f8d7da;
        color: #721c24;
        padding: 1rem;
        border-radius: 10px;
        margin-bottom: 1.5rem;
        border-left: 4px solid #dc3545;
    }

    .form-row {
        display: flex;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .form-col {
        flex: 1;
    }

    .input-icon {
        position: relative;
    }

    .input-icon i {
        position: absolute;
        left: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
        z-index: 1;
    }

    .input-icon .form-control {
        padding-left: 40px;
    }

    @@media (max-width: 768px) {
        .page-container {
            padding: 1rem;
        }

        .form-container {
            padding: 1.5rem;
        }

        .form-row {
            flex-direction: column;
            gap: 0;
        }
    }
</style>

<div class="page-container">
    <div class="page-header">
        <h2>Create New User</h2>
    </div>

    <div class="form-container">
        <h4 class="form-title">User Information</h4>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "validation-summary" })

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                <div class="input-icon">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter username" } })
                </div>
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                <div class="input-icon">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter email address", @type = "email" } })
                </div>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PasswordHash, "Password", htmlAttributes: new { @class = "control-label" })
                <div class="input-icon">
                    @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter password", @type = "password" } })
                </div>
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label" })
                <div class="input-icon">
                    @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter user role (e.g., Buyer, Farmer, Admin)" } })
                </div>
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>

            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                        @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-col">
                    <div class="form-group">
                        @Html.LabelFor(model => model.UpdatedAt, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                        @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <input type="submit" value="Create User" class="btn-submit" />
        }

        <div style="text-align: center; margin-top: 1.5rem;">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "back-link" })
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}